on:
  workflow_call:

env:
  IMAGE: "test-delete-image-tags"
  TAG: "0.1.0"

jobs:
  tests:
    name: Test for "delete-image-tags" action
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3

      - run: |
          if [ -z "${{ github.token }}" ]; then
            echo "GitHub token is not set"
            exit 1
          fi

      - id: build-image
        uses: ./actions/docker/build-image
        with:
          oci-registry: ghcr.io
          oci-registry-password: ${{ github.token }}
          context: "."
          dockerfile: "./tests/application-1/Dockerfile"
          target: "prod"
          platform: "linux/amd64"
          image: ${{ env.IMAGE }}
          tag: ${{ env.TAG }}

      - id: delete-image-tags
        uses: ./actions/docker/delete-image-tags
        with:
          image: ${{ env.IMAGE }}
          tag-prefix: ${{ env.TAG }}

      - name: Check ouputs
        uses: actions/github-script@v6
        with:
          script: |
            const assert = require("assert");

            const deletedImageTagsOutput = `${{ steps.delete-image-tags.outputs.deleted-image-tags }}`;
            assert(deletedImageTagsOutput.length, `"deleted-image-tags" output is empty`);

            // Check if is valid Json
            let deletedImageTags = null;
            try {
              deletedImageTags = JSON.parse(deletedImageTagsOutput);
            } catch (error) {
              throw new Error(`"deleted-image-tags" output is not a valid JSON: ${error}`);
            }

            assert(Array.isArray(deletedImageTags), `"deleted-image-tags" output is not an array`);
            assert.deepEqual(deletedImageTags, ["${{ env.TAG }}-linux-amd64"]);

      - name: Ensure packages have been deleted
        uses: actions/github-script@v6.4.0
        with:
          github-token: ${{ github.token }}
          script: |
            const assert = require("assert");
            const packagePayload = {
              package_type: 'container',
              package_name: 'ci-github-container/${{ env.IMAGE }}',
              org: 'hoverkraft-tech',
            };

            const packageVersions = await github.paginate(
              github.rest.packages.getAllPackageVersionsForPackageOwnedByOrg.endpoint.merge(packagePayload)
            );

            const packageVersionExists = packageVersions.some(
              (packageVersion) => packageVersion.metadata.container.tags.some(
                (tag) => tag === "${{ env.TAG }}-linux-amd64"
              )
            );
            assert.equal(packageVersionExists, false, `Package version "${{ env.TAG }}" has not been deleted`);
