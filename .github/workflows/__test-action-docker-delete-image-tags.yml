on:
  workflow_call:

env:
  IMAGE: "test-delete-image-tags"
  TAG: "0.1.0"

jobs:
  setup-tests:
    runs-on: ubuntu-latest
    steps:
      - run: |
          if [ -z "${{ secrets.GITHUB_TOKEN }}" ]; then
            echo "GitHub token secrets is not set"
            exit 1
          fi
  build:
    needs: setup-tests
    uses: ./.github/workflows/docker-build-images.yml
    secrets:
      oci-registry-password: ${{ secrets.GITHUB_TOKEN }}
    with:
      images: |
        [
          {
            "name": "test-delete-image-tags",
            "context": ".",
            "dockerfile": "./tests/application-1/Dockerfile",
            "build-args": { "PROD_MODE": "true" },
            "target": "prod",
            "platforms": ["linux/amd64"],
            "tag": "0.1.0"
          }
        ]

  tests:
    name: Test for "delete-image-tags" action
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - id: delete-image-tags
        uses: ./actions/docker/delete-image-tags
        with:
          image: ${{ env.IMAGE }}
          tag-prefix: ${{ env.TAG }}

      - name: Check ouputs
        uses: actions/github-script@v6.4.1
        with:
          script: |
            const assert = require("assert");

            const deletedImageTagsOutput = `${{ steps.delete-image-tags.outputs.deleted-image-tags }}`;
            assert(deletedImageTagsOutput.length, `"deleted-image-tags" output is empty`);

            // Check if is valid Json
            let deletedImageTags = null;
            try {
              deletedImageTags = JSON.parse(deletedImageTagsOutput);
            } catch (error) {
              throw new Error(`"deleted-image-tags" output is not a valid JSON: ${error}`);
            }

            assert(Array.isArray(deletedImageTags), `"deleted-image-tags" output is not an array`);
            assert.deepEqual(deletedImageTags, ["${{ env.TAG }}"]);

      - name: Ensure packages have been deleted
        uses: actions/github-script@v6.4.1
        with:
          github-token: ${{ github.token }}
          script: |
            const assert = require("assert");
            const packagePayload = {
              package_type: 'container',
              package_name: 'ci-github-container/${{ env.IMAGE }}',
              org: 'hoverkraft-tech',
            };

            const packageVersions = await github.paginate(
              github.rest.packages.getAllPackageVersionsForPackageOwnedByOrg.endpoint.merge(packagePayload)
            );

            const packageVersionExists = packageVersions.some(
              (packageVersion) => packageVersion.metadata.container.tags.some(
                (tag) => tag === "${{ env.TAG }}"
              )
            );
            assert.equal(packageVersionExists, false, `Package version "${{ env.TAG }}" has not been deleted`);
