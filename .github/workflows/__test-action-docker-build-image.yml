name: Test for "docker/build-image" action
run-name: Test for "docker/build-image" action

on:
  workflow_call:

jobs:
  tests:
    name: Test for "docker/build-image" action
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - run: |
          if [ -z "${{ github.token }}" ]; then
            echo "GitHub token is not set"
            exit 1
          fi

      - id: build-image
        uses: ./actions/docker/build-image
        with:
          oci-registry: ghcr.io
          oci-registry-password: ${{ github.token }}
          context: "."
          dockerfile: "./tests/application-1/Dockerfile"
          target: "prod"
          platform: "linux/amd64"
          image: ghcr.io/hoverkraft-tech/ci-github-container/application-1
          labels: |
            org.opencontainers.image.title=Application 1
            org.opencontainers.image.description=Application 1

      - name: Check build image ouput
        uses: actions/github-script@v7.0.0
        with:
          script: |
            const assert = require("assert");

            const imageOutput = `${{ steps.build-image.outputs.image }}`;
            assert(imageOutput.length, `"image" output is empty`);
            assert.equal(imageOutput,"ghcr.io/hoverkraft-tech/ci-github-container/application-1", `"image" output is not valid`);

            const digestOutput = `${{ steps.build-image.outputs.digest }}`;
            assert(digestOutput.length, `"digest" output is empty`);
            assert.match(digestOutput, /^sha256:[a-f0-9]{64}$/, `"digest" output is not a valid image digest`);

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}

      - name: Check docker images
        run: |
          docker manifest inspect "${{ steps.build-image.outputs.image }}@${{ steps.build-image.outputs.digest }}"
