# Prune pull requests images tags
# ==========================
# Workflow to performs a clean of closed pull requests images tags.
# See [../../actions/docker/prune-pull-requests-image-tags/README.md](../../actions/docker/prune-pull-requests-image-tags/README.md) for more information.

name: Prune pull requests images tags

on:
  workflow_call:
    inputs:
      runs-on:
        description: "Json array of runner(s) to use. See https://docs.github.com/en/actions/using-jobs/choosing-the-runner-for-a-job"
        type: string
        default: '["ubuntu-latest"]'
        required: false
      images:
        description: 'Images to clean. Example: ["application-1","application-2"]'
        type: string
        required: true

permissions:
  contents: read
  packages: write

jobs:
  prepare-variables:
    outputs:
      images: ${{ steps.validate-inputs.outputs.images }}
    runs-on: ${{ fromJson(inputs.runs-on) }}
    steps:
      - id: validate-inputs
        uses: actions/github-script@v7.0.0
        with:
          script: |
            const imagesInput = `${{ inputs.images }}`;

            // Check if is valid Json
            let images = null;
            try {
              images = JSON.parse(imagesInput);
            } catch (error) {
              throw new Error(`"images" input is not a valid JSON: ${error}`);
            }

            // Check if is an array
            if (!Array.isArray(images)) {
              throw new Error(`"images" input is not an array`);
            }

            // Check each item
            for (const key in images) {
              const image = images[key];
              if (typeof image !== 'string') {
                throw new Error(`"images[${key}]" input is not a string`);
              }
            }

            core.setOutput('images', JSON.stringify([...new Set(images)]));

  prune-pull-requests-image-tags:
    name: Prune pull requests image tags for ${{ matrix.image }}
    needs: prepare-variables
    runs-on: ${{ fromJson(inputs.runs-on) }}
    strategy:
      fail-fast: false
      matrix:
        image: ${{ fromJson(needs.prepare-variables.outputs.images) }}
    permissions:
      contents: read
      pull-requests: read
      packages: write
      # FIXME: This is a workaround for having workflow actions. See https://github.com/orgs/community/discussions/38659
      id-token: write
    steps:
      # FIXME: This is a workaround for having workflow actions. See https://github.com/orgs/community/discussions/38659
      - id: oidc
        uses: ChristopherHX/oidc@v2
      - uses: actions/checkout@v4
        with:
          path: ./self-workflow
          repository: ${{ steps.oidc.outputs.job_workflow_repo_name_and_owner }}
          ref: ${{ steps.oidc.outputs.job_workflow_repo_ref }}

      - id: build
        uses: ./self-workflow/actions/docker/prune-pull-requests-image-tags
        with:
          image: ${{ matrix.image }}
