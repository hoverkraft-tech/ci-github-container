on:
  workflow_call:

jobs:
  tests:
    name: Test for "prune-pull-requests-image-tags" action
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3

      - run: |
          if [ -z "${{ github.token }}" ]; then
            echo "GitHub token is not set"
            exit 1
          fi

      - id: build-image
        uses: ./actions/docker/build-image
        with:
          oci-registry: ghcr.io
          oci-registry-password: ${{ github.token }}
          context: "."
          dockerfile: "./tests/application-1/Dockerfile"
          target: "prod"
          platform: "linux/amd64"
          image: test-prune

      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}

      - name: Push extra docker image tags for test
        run: |
          docker pull ${{ fromJson(steps.build-image.outputs.images)[0] }}
          docker tag ${{ fromJson(steps.build-image.outputs.images)[0] }} ghcr.io/hoverkraft-tech/ci-github-container/test-prune:pr-1-linux-amd64
          docker push ghcr.io/hoverkraft-tech/ci-github-container/test-prune:pr-1-linux-amd64

      - id: prune-pull-requests-image-tags
        uses: ./actions/docker/prune-pull-requests-image-tags
        with:
          image: test-prune

      - name: Check ouputs
        uses: actions/github-script@v6
        with:
          script: |
            const assert = require("assert");

            const deletedImageTagsOutput = `${{ steps.prune-pull-requests-image-tags.outputs.deleted-image-tags }}`;
            assert(deletedImageTagsOutput.length, `"deleted-image-tags" output is empty`);

            // Check if is valid Json
            let deletedImageTags = null;
            try {
              deletedImageTags = JSON.parse(deletedImageTagsOutput);
            } catch (error) {
              throw new Error(`"deleted-image-tags" output is not a valid JSON: ${error}`);
            }

            assert(Array.isArray(deletedImageTags), `"deleted-image-tags" output is not an array`);
            assert.equal(deletedImageTags[0], `pr-1-linux-amd64`);

            // If is pull request ensure that deleted tags does not contain current pull request
            const pullRequestNumber = `${{ github.event.pull_request.number }}`;
            if (pullRequestNumber.length) {
              const deletedImageTagsForCurrentPullRequest = deletedImageTags.filter((imageTag) => imageTag.includes(`pr-${pullRequestNumber}`));
              assert.equal(deletedImageTagsForCurrentPullRequest.length, 0, `"deleted-image-tags" output contains current pull request image tag`);
            }

      - name: Ensure packages have been deleted
        uses: actions/github-script@v6.4.0
        with:
          github-token: ${{ github.token }}
          script: |
            const assert = require("assert");
            const packagePayload = {
              package_type: 'container',
              package_name: 'ci-github-container/test-prune',
              org: 'hoverkraft-tech',
            };

            const packageVersions = await github.paginate(
              github.rest.packages.getAllPackageVersionsForPackageOwnedByOrg.endpoint.merge(packagePayload)
            );

            const packageVersionExists = packageVersions.some(
              (packageVersion) => packageVersion.metadata.container.tags.some(
                (tag) => tag === "pr-1-linux-amd64"
              )
            );
            assert.equal(packageVersionExists, false, `Package version "pr-1-linux-amd64" has not been deleted`);

  cleanup:
    needs: tests
    runs-on: "ubuntu-latest"
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v3

      - id: get-issue-number
        if: ${{ github.event_name == 'pull_request' }}
        uses: hoverkraft-tech/ci-github-common/actions/get-issue-number@0.4.2

      - name: Cleanup images tags
        if: ${{ github.event_name == 'pull_request' }}
        uses: ./actions/docker/delete-ghcr-tags
        with:
          image: "test-prune"
          tag-prefix: "${{ steps.get-issue-number.outputs.issue-number }}-"
