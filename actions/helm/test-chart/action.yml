---
name: "Test Helm Chart"
# yamllint disable-line rule:line-length
description: "Action to test a Helm chart. Mainly using [helm/chart-testing-action](https://github.com/helm/chart-testing-action)"
branding:
  icon: check-circle
  color: gray-dark

inputs:
  working-directory:
    description: "Working directory"
    required: false
    default: "${{ github.workspace }}"
  helm-set:
    description: |
      Set values for Helm chart.
      Multiple values can be set using multiline string.
      Example:
        key1=value1
        key2=value2
    required: false

runs:
  using: "composite"
  steps:
    - uses: hoverkraft-tech/ci-github-common/actions/checkout@0.13.3
      with:
        fetch-depth: 0

    - name: Check for .tools-version file
      id: check-tools-version
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        if [[ -f .tools-version ]]; then
          echo "tools-version-exists=true" >> "$GITHUB_OUTPUT"
        else
          echo "tools-version-exists=false" >> "$GITHUB_OUTPUT"
        fi

    - name: Install tools with asdf
      if: steps.check-tools-version.outputs.tools-version-exists == 'true'
      uses: asdf-vm/actions/install@v3

    - name: Check for ct.yaml file
      id: check-ct-yaml
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        if [[ -f ct.yaml ]]; then
          echo "ct-yaml-exists=true" >> "$GITHUB_OUTPUT"
        else
          echo "ct-yaml-exists=false" >> "$GITHUB_OUTPUT"
        fi

    - uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Set up chart-testing
      uses: helm/chart-testing-action@v2.6.1

    - name: Run chart-testing (lint)
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: ct lint --target-branch ${{ github.event.repository.default_branch }}

    - name: Create kind cluster
      uses: helm/kind-action@v1.9.0

    - name: Define target branch
      id: define-target-branch
      shell: bash
      run: |
        if [ "${{ github.event_name }}" == "pull_request"]; then
          TARGET_BRANCH="${{ github.event.pull_request.base.ref }}"
        else
          TARGET_BRANCH="${{ github.event.repository.default_branch }}"
        fi
        echo "target-branch=$TARGET_BRANCH" >> "$GITHUB_OUTPUT"

    - name: Run chart-testing (install)
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        HELM_SET="${{ inputs.helm-set }}"
        HELM_EXTRA_SET_ARGS=""
        if [ -n "$HELM_SET" ]; then
          HELM_EXTRA_SET_ARGS=$(echo "$HELM_SET" | awk '{print "--set " $0}')
        fi

        TARGET_BRANCH="${{ steps.define-target-branch.outputs.target-branch }}"

        ct install \
          --target-branch "$TARGET_BRANCH" \
          --helm-extra-args "--wait" \
          --helm-extra-set-args "$HELM_EXTRA_SET_ARGS"
