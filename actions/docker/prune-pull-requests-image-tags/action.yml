---
name: "Prune pull requests image tags from GitHub Packages"
description: "Action to prune existing package versions related to closed pull requests"
author: Hoverkraft
branding:
  icon: delete
  color: gray-dark

outputs:
  deleted-image-tags:
    description: 'The list of deleted tags for given image. Example: ["1.0.0", "1.0.1"]'
    value: ${{ steps.delete-image-tags.outputs.deleted-image-tags }}

inputs:
  image:
    description: "Image name"
    required: false
  pull-request-tag-filter:
    description: "The regular expression to match pull request tags. Must have a capture group for the pull request number."
    default: "^pr-([0-9]+)(?:-|$)"
  github-token:
    description: |
      GitHub token with the packages:read and packages:delete scopes.
      See <https://docs.github.com/en/packages/learn-github-packages/about-permissions-for-github-packages#about-scopes-and-permissions-for-package-registries>.
    default: ${{ github.token }}

runs:
  using: "composite"
  steps:
    - shell: bash
      # FIXME: workaround until will be merged: https://github.com/actions/runner/pull/1684
      run: mkdir -p ./self-actions/ && cp -r $GITHUB_ACTION_PATH/../../* ./self-actions/

    - id: image-name
      uses: ./self-actions/docker/get-image-name
      with:
        image: ${{ inputs.image }}

    - shell: bash
      # FIXME: workaround until will be merged: https://github.com/actions/runner/pull/1684
      run: |
        rm -fr ./self-actions

    - id: is-organization-or-user
      uses: hoverkraft-tech/ci-github-common/actions/repository-owner-is-organization@edc1e53751a82ce335e7c3208a32b6ee03856a9f # 0.20.0

    - id: delete-image-tags
      uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
      with:
        github-token: ${{ inputs.github-token }}
        script: |
          const pullRequestTagFilter = `${{ inputs.pull-request-tag-filter }}`;
          if (!pullRequestTagFilter.length) {
              core.setFailed('Input "pull-request-tag-filter" is undefined');
              return;
          }

          // Assert that the regex has a valid capture group for the pull request number
          const hasCaptureGroupMatch = pullRequestTagFilter.match(/\([^?]([^)]+)\)/g);
          if (!hasCaptureGroupMatch) {
            core.setFailed(
              `Input "pull-request-tag-filter" ${pullRequestTagFilter} must have a capture group for the pull request number`
            );
            return;
          }

          if (hasCaptureGroupMatch.length !== 1) {
            core.setFailed(
              `Input "pull-request-tag-filter" ${pullRequestTagFilter} must have only one capture group for the pull request number`
            );
            return;
          }

          const imageName = `${{ steps.image-name.outputs.image-name }}`;
          const isOrganization = `${{ steps.is-organization-or-user.outputs.is-organization }}` === 'true';

          const script = require(`${{ github.action_path }}/index.js`)
          const deletedTags = await script({
            github,
            context,
            core,
            imageName,
            pullRequestTagFilter,
            isOrganization,
          });

          core.setOutput('deleted-image-tags', JSON.stringify(deletedTags));
