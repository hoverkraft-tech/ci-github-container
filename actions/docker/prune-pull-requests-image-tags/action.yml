---
name: "Prune pull requests image tags from GitHub Packages"
description: "Action to prune existing package versions related to closed pull requests"
author: hoverkraft
branding:
  icon: delete
  color: blue

outputs:
  deleted-image-tags:
    description: |
      The list of deleted tags for given image.
      Example:
      ```json
      ["1.0.0", "1.0.1"]
      ```
    value: ${{ steps.clean-images.outputs.deleted-package-versions }}

inputs:
  image:
    description: "Image name"
    required: false
  pull-request-tag-filter:
    description: "The regular expression to match pull request tags. Must have a capture group for the pull request number."
    default: "^pr-([0-9]+)(?:-|$)"
  github-token:
    description: |
      GitHub token with the packages:read and packages:delete scopes.
      See https://docs.github.com/en/packages/learn-github-packages/about-permissions-for-github-packages#about-scopes-and-permissions-for-package-registries.
    default: ${{ github.token }}

runs:
  using: "composite"
  steps:
    - shell: bash
      # FIXME: workaround until will be merged: https://github.com/actions/runner/pull/1684
      run: mkdir -p ./self-actions/ && cp -r $GITHUB_ACTION_PATH/../../* ./self-actions/

    - id: image-name
      uses: ./self-actions/docker/get-image-name
      with:
        image: ${{ inputs.image }}

    - id: is-organization-or-user
      uses: hoverkraft-tech/ci-github-common/actions/repository-owner-is-organization@b7dd413209df265bef8d7eb0efb117eaabc684c4 # 0.27.0

    - id: get-tags-to-delete
      uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
      with:
        github-token: ${{ inputs.github-token }}
        script: |
          const pullRequestTagFilter = `${{ inputs.pull-request-tag-filter }}`;
          if (!pullRequestTagFilter.length) {
              core.setFailed('Input "pull-request-tag-filter" is undefined');
              return;
          }

          // Assert that the regex has a valid capture group for the pull request number
          const hasCaptureGroupMatch = pullRequestTagFilter.match(/\([^?]([^)]+)\)/g);
          if (!hasCaptureGroupMatch) {
            core.setFailed(
              `Input "pull-request-tag-filter" ${pullRequestTagFilter} must have a capture group for the pull request number`
            );
            return;
          }

          if (hasCaptureGroupMatch.length !== 1) {
            core.setFailed(
              `Input "pull-request-tag-filter" ${pullRequestTagFilter} must have only one capture group for the pull request number`
            );
            return;
          }

          const imageName = `${{ steps.image-name.outputs.image-name }}`;
          const isOrganization = `${{ steps.is-organization-or-user.outputs.is-organization }}` === 'true';

          const script = require(`${{ github.action_path }}/index.js`)
          const tagsToDelete = await script({
            github,
            context,
            core,
            imageName,
            pullRequestTagFilter,
            isOrganization,
          });

          // Convert tags to comma-separated string for delete-tags input
          if (tagsToDelete.length === 0) {
            core.info('No tags to delete');
            return;
          }

          const tagsString = tagsToDelete.join(',');
          core.setOutput('tags-to-delete', tagsString);
          core.info(`Tags to delete: ${tagsString}`);

    - id: clean-images
      uses: ./self-actions/docker/clean-images
      if: steps.get-tags-to-delete.outputs.tags-to-delete
      with:
        github-token: ${{ inputs.github-token }}
        package: ${{ steps.image-name.outputs.image-name }}
        tags: ${{ steps.get-tags-to-delete.outputs.tags-to-delete }}

    - shell: bash
      # FIXME: workaround until will be merged: https://github.com/actions/runner/pull/1684
      run: |
        rm -fr ./self-actions
